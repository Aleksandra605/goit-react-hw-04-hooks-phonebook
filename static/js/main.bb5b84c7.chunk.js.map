{"version":3,"sources":["Components/form/Form.js","Components/filter/Filter.js","Components/contacts-list/ContactList.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js","Components/form/form-styles.module.css","Components/contacts-list/contactsList-styles.module.css","Components/filter/filter-styles.module.css"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","event","preventDefault","id","shortid","generate","className","s","form","label","input","type","pattern","title","required","value","onChange","target","btn","Filter","div","ContactList","contacts","onDelete","list","map","contact","item","p","span","onClick","useLocalStorage","key","deafultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","deafultContactList","App","filtered","setFilter","setContacts","deleteContact","filter","el","data","undefined","find","obj","alert","console","log","normalizedFilter","toLocaleLowerCase","includes","getFilteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bb5b84c7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport s from './form-styles.module.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const changeName = event => {\n    setName(event.target.value);\n  };\n\n  const changeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name: name, number: number, id: shortid.generate() });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>Name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={changeName}\n      />\n      <label className={s.label}>Number</label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        onChange={changeNumber}\n      />\n      <button type=\"submit\" className={s.btn}>\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './filter-styles.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.div}>\n      <label className={s.label}>Find contacts by name</label>\n      <input onChange={onChange} value={value} className={s.input}></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './contactsList-styles.module.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => {\n        const { name, number, id } = contact;\n        return (\n          <li key={id} className={s.item}>\n            <p className={s.p}>\n              {name} <span className={s.span}>{number}</span>\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => onDelete(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, deafultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? deafultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import './App.css';\nimport { useState } from 'react';\nimport Form from './Components/form/Form';\nimport Filter from './Components/filter/Filter';\nimport ContactList from './Components/contacts-list/ContactList';\nimport PropTypes from 'prop-types';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst deafultContactList = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [filtered, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage(\n    'contacts',\n    deafultContactList,\n  );\n\n  const formSubmitHandler = data => {\n    let similar = contacts.find(obj => obj.name === data.name);\n\n    similar !== undefined\n      ? alert(`${data.name} is already in contacts.`)\n      : setContacts([...contacts, data]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    console.log(contacts);\n\n    const normalizedFilter = filtered.toLocaleLowerCase();\n\n    const filteredNames = contacts.filter(item =>\n      item.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n\n    return filteredNames;\n  };\n\n  const deleteContact = id => {\n    setContacts(state => {\n      return state.filter(el => el.id !== id);\n    });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={formSubmitHandler} />\n      <Filter value={filtered} onChange={changeFilter} />\n      {filtered !== '' ? (\n        <ContactList\n          contacts={getFilteredContacts()}\n          onDelete={deleteContact}\n        />\n      ) : (\n        <ContactList contacts={contacts} onDelete={deleteContact} />\n      )}\n    </div>\n  );\n}\n\nApp.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-styles_label__1ii2F\",\"input\":\"form-styles_input__2kwkh\",\"form\":\"form-styles_form__2XjjX\",\"btn\":\"form-styles_btn__3Cqki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactsList-styles_list__2Og0P\",\"item\":\"contactsList-styles_item__ZsIDj\",\"span\":\"contactsList-styles_span__LEU2t\",\"btn\":\"contactsList-styles_btn__28O4j\",\"p\":\"contactsList-styles_p__1eVT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"filter-styles_div__1KoDc\",\"input\":\"filter-styles_input__3mFod\",\"label\":\"filter-styles_label__1GwLw\"};"],"sourceRoot":""}